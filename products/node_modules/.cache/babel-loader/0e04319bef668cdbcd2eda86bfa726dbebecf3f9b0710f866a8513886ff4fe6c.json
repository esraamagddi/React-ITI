{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axiosInstance from '../axios/axiosInstance';\nexport const fetchProducts = createAsyncThunk('products/fetchProducts', async () => {\n  const response = await axiosInstance.get('/products');\n  return response.data;\n});\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState: {\n    products: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    // Your reducer logic\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, state => {\n      state.status = 'loading';\n      console.log('Fetching products...');\n    }).addCase(fetchProducts.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.products = action.payload;\n      console.log('Products fetched:', action.payload);\n    }).addCase(fetchProducts.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n      console.error('Error fetching products:', action.error.message);\n    });\n  }\n});\nexport default productsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosInstance","fetchProducts","response","get","data","productsSlice","name","initialState","products","status","error","reducers","extraReducers","builder","addCase","pending","state","console","log","fulfilled","action","payload","rejected","message","reducer"],"sources":["/home/esraa/Documents/react/products/src/slices/productsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axiosInstance from '../axios/axiosInstance';\r\n\r\nexport const fetchProducts = createAsyncThunk('products/fetchProducts', async () => {\r\n  const response = await axiosInstance.get('/products');\r\n  return response.data;\r\n});\r\n\r\nconst productsSlice = createSlice({\r\n  name: 'products',\r\n  initialState: {\r\n    products: [],\r\n    status: 'idle',\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    // Your reducer logic\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchProducts.pending, (state) => {\r\n        state.status = 'loading';\r\n        console.log('Fetching products...'); \r\n      })\r\n      .addCase(fetchProducts.fulfilled, (state, action) => {\r\n        state.status = 'succeeded';\r\n        state.products = action.payload;\r\n        console.log('Products fetched:', action.payload); \r\n      })\r\n      .addCase(fetchProducts.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message;\r\n        console.error('Error fetching products:', action.error.message); \r\n      });\r\n  },\r\n});\r\n\r\nexport default productsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,aAAa,MAAM,wBAAwB;AAElD,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAAC,wBAAwB,EAAE,YAAY;EAClF,MAAMG,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAG,CAAC,WAAW,CAAC;EACrD,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEF,MAAMC,aAAa,GAAGP,WAAW,CAAC;EAChCQ,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACR;EAAA,CACD;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACb,aAAa,CAACc,OAAO,EAAGC,KAAK,IAAK;MACzCA,KAAK,CAACP,MAAM,GAAG,SAAS;MACxBQ,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACrC,CAAC,CAAC,CACDJ,OAAO,CAACb,aAAa,CAACkB,SAAS,EAAE,CAACH,KAAK,EAAEI,MAAM,KAAK;MACnDJ,KAAK,CAACP,MAAM,GAAG,WAAW;MAC1BO,KAAK,CAACR,QAAQ,GAAGY,MAAM,CAACC,OAAO;MAC/BJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEE,MAAM,CAACC,OAAO,CAAC;IAClD,CAAC,CAAC,CACDP,OAAO,CAACb,aAAa,CAACqB,QAAQ,EAAE,CAACN,KAAK,EAAEI,MAAM,KAAK;MAClDJ,KAAK,CAACP,MAAM,GAAG,QAAQ;MACvBO,KAAK,CAACN,KAAK,GAAGU,MAAM,CAACV,KAAK,CAACa,OAAO;MAClCN,OAAO,CAACP,KAAK,CAAC,0BAA0B,EAAEU,MAAM,CAACV,KAAK,CAACa,OAAO,CAAC;IACjE,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAelB,aAAa,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}